<?php
/**
 * @file imrs_misc.module
 * @author Shaun Moss (shaun@astromultimedia.com, skype:mossy2100)
 * @since 15-Feb-2014 20:19
 */

/**
 * Implements hook_init().
 */
function imrs_misc_init() {
  require_once DRUPAL_ROOT . "/sites/all/libraries/star/php/strings.php";
  require_once DRUPAL_ROOT . "/sites/all/libraries/star/php/arrays.php";
  require_once DRUPAL_ROOT . "/sites/all/libraries/star/php/objects.php";

  dbg_on();
}

/**
 * Implements hook_menu().
 */
function imrs_misc_menu() {
  $items['admin/scale-images'] = array(
    'page callback' => 'imrs_misc_scale_images',
    'access arguments' => array('access administration pages'),
    'type' => MENU_CALLBACK,
  );
  $items['download'] = array(
    'title' => "Download",
    'description' => "Download the IMRS book as a PDF (full colour, 77MB)",
    'page callback' => 'imrs_misc_download',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_wysiwyg_editor_settings_alter().
 *
 * @param array $settings
 * @param array $context
 */
function imrs_misc_wysiwyg_editor_settings_alter(&$settings, $context) {
  // Turn off the Advanced Content Filter:
  $settings['allowedContent'] = TRUE;
}

/**
 * Implements hook_menu_alter().
 */
function imrs_misc_menu_alter(&$items) {
  // Remove register and password forms so no-one can join:
  unset($items['user/register']);
  unset($items['user/password']);
}

/**
 * Implements hook_block_info().
 */
function imrs_misc_block_info() {
  $blocks = [];
  $blocks['contents'] = [
    'info' => t('IMRS Book Contents'),
    'cache' => DRUPAL_CACHE_GLOBAL,
    'properties' => [
      'administrative' => FALSE,
    ]
  ];
  return $blocks;
}

/**
 * Generate the TOC subblock for the given level.
 *
 * @param int $level
 * @param int $plid
 * @param string $parent_section
 * @return string
 */
function _imrs_misc_toc($level = 0, $plid = 0, $parent_section = '') {
  $html = '';
  $q2 = "select * from menu_links where plid=$plid and menu_name='book-toc-1' order by weight";
  $rs2 = db_query($q2);
  if ($rs2->rowCount()) {
    $html .= "<div id='section-level-$level'>";
    $n = 1;
    foreach ($rs2 as $rec2) {
      $section_number = $plid ? ($parent_section . $n . '.') : '';
      $section = $plid ? ($section_number . ' ') : '';
      $margin = $plid ? ($level * 10 - 10) : 3;
//      $options = (current_path() == $rec2->link_path) ? ['attributes' => ['class' => ['active']]] : [];
      $options = [];
      $html .= "<div class='section-item' style='margin-left:{$margin}px'>";
      $html .= "<div class='section-link'>{$section}". l($rec2->link_title, $rec2->link_path, $options) . "</div>";
      $html .= _imrs_misc_toc($level + 1, $rec2->mlid, $section_number);
      $html .= "</div>"; // section
      $n++;
    }
    $html .= "</div>";
  }
  return $html;
}

/**
 * Implements hook_block_view().
 *
 * @param string $delta
 * @return string
 */
function imrs_misc_block_view($delta = '') {
  $block = [];
  if ($delta == 'contents') {
    $block['subject'] = 'Contents';
    $block['content'] = _imrs_misc_toc();
  }
  return $block;
}

/**
 * Get the directory where the HTML files live.
 *
 * @return string
 */
function imrs_misc_html_dir() {
  return DRUPAL_ROOT . "/sites/default/media/html";
}

/**
 * Modify the book page form.
 *
 * @param array $form
 * @param array $form_state
 */
function imrs_misc_form_book_node_form_alter(&$form, &$form_state) {
  // Populate the select form:
  $form['field_html_file'][LANGUAGE_NONE]['#options'] = ['' => '-- Select --'];
  $dir = imrs_misc_html_dir();
  $files = scandir($dir);
  foreach ($files as $file) {
    $path = "$dir/$file";
    if (is_file($path) && pathinfo($path, PATHINFO_EXTENSION) == 'html') {
      $form['field_html_file'][LANGUAGE_NONE]['#options'][$file] = $file;
    }
  }

  // Select the value:
  $file = $form['#node']->field_html_file[LANGUAGE_NONE][0]['value'];
  $form['field_html_file'][LANGUAGE_NONE]['#default_value'] = $file;

  // Set the value of the body field to the contents of the HTML file:
  if ($file) {
    $path = "$dir/$file";
    $form['field_html_editor'][LANGUAGE_NONE][0]['#default_value'] = file_get_contents($path);
  }

  // Add a submit handler:
  $form['#submit'][] = 'imrs_misc_form_book_node_form_submit';
}

/**
 * Submit handler for the book page form.
 *
 * @param array $form
 * @param array $form_state
 */
function imrs_misc_form_book_node_form_submit($form, &$form_state) {
  $html = simpleNewlines($form_state['values']['field_html_editor'][LANGUAGE_NONE][0]['value']);
  $file = $form_state['values']['field_html_file'][LANGUAGE_NONE][0]['value'];
  if (!$file) {
    drupal_set_message("The HTML file was not updated because none was selected.", 'warning');
  }
  else {
    if ($html) {
      $dir = imrs_misc_html_dir();
      $path = "$dir/$file";
      $orig_html = file_get_contents($path);
      if ($html != $orig_html) {
        // Update the HTML file:
        $result = file_put_contents($path, $html);
        if ($result === FALSE) {
          drupal_set_message("The HTML file <i>$file</i> could not be updated. Make sure the directory <i>$dir</i> is writable by the web server.", 'error');
        }
        else {
          drupal_set_message("The HTML file <i>$file</i> was updated with the contents of the editor.");
        }
      }
      else {
        drupal_set_message("The HTML file <i>$file</i> was not updated because the HTML hadn't changed.");
      }
    }
    else {
      drupal_set_message("The HTML file <i>$file</i> was not updated because the editor was empty.", 'warning');
    }
  }
}

/**
 * Alter output for book pages.
 *
 * @param stdClass $node
 * @param string $view_mode
 * @param string $langcode
 */
function imrs_misc_node_view($node, $view_mode, $langcode) {
  if ($node->type != 'book' || $view_mode != 'full') {
    return;
  }

  // Compare the HTML in the database with the HTML in the file:
  $file = $node->field_html_file[LANGUAGE_NONE][0]['value'];
  if ($file) {
    $dir = imrs_misc_html_dir();
    $path = "$dir/$file";
    if (file_exists($path)) {
      $file_html = file_get_contents($path);
      $db_html = $node->field_html_editor[LANGUAGE_NONE][0]['value'];
      if ($file_html && $file_html != $db_html) {
        // The file has been updated.

        // Fix file paths and links.
        $file_html = str_replace(
          array(
            'src="images',
            'src="/sites/default/files/images'
          ),
          'src="/sites/default/media/images', $file_html);
        $file_html = preg_replace('/"([a-z0-9]+)\.xhtml/', '"/$1', $file_html);
        $file_html = preg_replace('/<h2>(\d+)\.(\d+)\./', '<h2 id="section$1-$2">$1.$2.', $file_html);
        $file_html = preg_replace('/<h3>(\d+)\.(\d+)\.(\d+)\./', '<h3 id="section$1-$2-$3">$1.$2.$3.', $file_html);

        // Update the file.
        file_put_contents($path, $file_html);

        // Update the database.
        $node->field_html_editor[LANGUAGE_NONE][0]['value'] = $file_html;
        $node->field_html_editor[LANGUAGE_NONE][0]['format'] = 'full_html';

        // Need to disable pathauto otherwise the alias will get regenerated.
        $node->path['pathauto'] = FALSE;

        // Save the node.
        node_save($node);

        // Update the content:
        $node->content['field_html_editor'][0]['#markup'] = $file_html;
      }
    }
  }
}

/**
 * Scale any images that are wider than 860px to that width.
 */
function imrs_misc_scale_images() {
  $dir = DRUPAL_ROOT . '/sites/default/media/images';
  $files = scandir($dir);
  foreach ($files as $file) {
    echo "<hr>";
    $path = "$dir/$file";
    dbg($path);
    if (is_dir($path)) {
      echobr("Directory, skipping.");
      continue;
    }

    $image = image_load($path);
    dbg($image);

    if ($image && $image->info['width'] > 860) {
      echobr("Can scale that bitch.");
      $result = image_scale($image, 860);
      dbg($result);
      dbg($image);

      $dest = str_replace('/sites/default/media/images', '/sites/default/media/images/scaled', $path);
      image_save($image, $dest);
    }
  }
}

/**
 * Download the book as PDF.
 */
function imrs_misc_download() {
  header("Location: /sites/default/media/doc/Shaun Moss, 2015 - The International Mars Research Station.pdf");
}
